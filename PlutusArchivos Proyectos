#include "stdafx.h"
#include "conio.h"

#include <iostream>
#include <stdio.h>
#include "stdlib.h"
#include <string>

using namespace std;

void ALTA_SECUENCIAL(void);
void LISTADO_SECUENCIAL(void);
void CONSULTA_SECUENCIAL(void);

int main ()
{
  //   float precio;
  //   int id, cantidad;
  //   string PRODUCTO;
  //   string descrip;
  // string proyectos;

  //   FILE *pf;
  // pf = fopen("texto.txt", "w");

  //   for (int a = 1; a <= 10; a++)
  //   {
  //   printf("Ingrese un proyecto para guardar en un archivo n: ");
  //   cin >> proyectos;
  //   fprintf(pf, "%snn", proyectos.c_str());
  // }

  // fclose(pf);

  return 0;
}

struct proyecto{
  int id;
  string categoria;
  string descripcion;
  float objetivo;
  float acumulado;
};

FILE *ptr_proyecto;
proyecto registro_inversor;

// FILE *ptr_inversor;
// inversor registro_inversor_inversor;

void AlTA_SECUENCIAL(void)
{   
    int id;// Variable local para el numero de producto 
    // clrscr(); 
    cout << "\n\rALTAS DE registro_inversorS DE PROYECTOS"; 
    ptr_proyecto = fopen("PROYECTO.SEC","rb+"); // Intenta abrir el archivo  
                                     // en modo de lectura/escritura 
    if(ptr_proyecto == NULL) 
    ptr_proyecto = fopen("PROYECTO.SEC","wb"); // Crea el archivo en caso de no 
                                      // existir 
    cout << "\n\n\n\r Numero de proyecto: "; 
    cin >> id; 

    fread(&registro_inversor, sizeof(registro_inversor), 1, ptr_proyecto); 
    // Lee el "registro_inversor", de tamano=sizeof(registro_inversor) del archivo "ptr_proyecto" 
    while(!feof(ptr_proyecto)) // Ciclo mientras no se encuentre el final del archivo 
    { 
      if(registro_inversor.id == id) 
      { 
         cout << "\n\n\n\rregistro_inversor duplicado !!!"; 
         fclose(ptr_proyecto); 
         getchar(); 
         return; 
      } 
      fread(&registro_inversor, sizeof(registro_inversor), 1, ptr_proyecto); 
    } 
    
    cout << "\n\r categoria: "; 
    cin >> registro_inversor.categoria; 

    cout << "\n\r Descripcion   : "; 
    cin >> registro_inversor.descripcion; 

    cout << "\n\r Objetivo    : "; 
    cin >> registro_inversor.objetivo; 

    registro_inversor.acumulado = 0;



    registro_inversor.id = id; 
    fwrite(&registro_inversor, sizeof(registro_inversor), 1, ptr_proyecto); // Grabar el registro_inversor  
    fclose(ptr_proyecto); // Cierra el archivo 

    cout << "\n\n\n\r Proyecto registrado !!!"; 
    cout << "\n\r<<< Oprima cualquier tecla para continuar >>>"; 

    getchar(); 
    return; 
}

void LISTADO_SECUENCIAL(void) 
{
    system("cls");

  cout << "\n\rLISTADO DE registro_inversorS DE PRODUCTOS"; 
  ptr_proyecto = fopen("PRODUCTO.SEC","rb"); // Intenta abrir el archivo PRODUCTO.SEC; 
                           // en modo de solo lectura 
  if(ptr_proyecto == NULL) 
  { 
    cout << "\n\n\n\rNo existe el archivo !!!"; 
    cout << "\n\r<<< Oprima cualquier tecla para continuar >>>"; 
    getchar(); 
    return; 
  } 
   cout << "\n\r ID proyecto        categoria   descripcion   onjetico     acumulado"; 
   cout << "\n\r------------------------------------------------------------------------"; 
   fread(&registro_inversor, sizeof(registro_inversor), 1, ptr_proyecto); 
  
  // Lee el "registro_inversor", de tamano=sizeof(registro_inversor) del archivo "ptr_proyecto"
  while(!feof(ptr_proyecto)) // Ciclo mientras no se encuentre el final del archivo 
  { 
    //printf("\n\r%3d\t%30s\t%3d\t\t$%4.2f\t%c", registro_inversor.id, registro_inversor.descrip.c_str(), registro_inversor.cantidad, registro_inversor.precio, registro_inversor.garantia); 
    cout << registro_inversor.id << registro_inversor.categoria << registro_inversor.descripcion << registro_inversor.objetivo << registro_inversor.acumulado << endl;
    fread(&registro_inversor, sizeof(registro_inversor), 1, ptr_proyecto); 
  } 

  fclose(ptr_proyecto); // Cierra el archivo 

  cout << "\n\r------------------------------------------------------------------------"; 
  cout << "\n\r Fin del listado !!!"; 
  cout << "\n\r <<< Oprima cualquier tecla para continuar >>>"; 

  getchar(); 
  return; 
}

void CONSULTA_SECUENCIAL(void)
{
  int id;
  //clrscr();

  cout << "\n\rCONSULTA DE registro_inversorS DE PRODUCTOS";
  ptr_proyecto = fopen("PRODUCTO.SEC","rb"); // Intenta abrir el archivo PRODUCTO.SEC
  
  if(ptr_proyecto == NULL)
  {
    // en modo de solo lectura
    cout << "\n\n\n\rNo existe el archivo !!!";
    cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
    getchar();
    return;
  }
  
  cout << "\n\n\n\r Numero de producto: "; 
  cin >> id;

  fread(&registro_inversor, sizeof(registro_inversor), 1, ptr_proyecto);

  // Lee el "registro_inversor", de tamano=sizeof(registro_inversor) del archivo "ptr_proyecto"
  while(!feof(ptr_proyecto))
  {
    if(registro_inversor.id == id)
    {
      cout << "\n\r ID proyecto        categoria   descripcion   onjetico     acumulado"; 
    
      cout << "\n\r------------------------------------------------------ ------------------";
      //printf("\n\r%3d\t%30s\t%3d\t\t$%4.2f\t%c", registro_inversor.id, registro_inversor.descrip.c_str(), registro_inversor.cantidad, registro_inversor.precio, registro_inversor.garantia);
      cout << registro_inversor.id << registro_inversor.categoria << registro_inversor.descripcion << registro_inversor.objetivo << registro_inversor.acumulado << endl;
    
      fclose(ptr_proyecto);
      cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";
      getchar();
      return;
    }
    fread(&registro_inversor, sizeof(registro_inversor), 1, ptr_proyecto);
  }

  cout << "\n\rNo se encuentra ese registro_inversor !!!";
  
  fclose(ptr_proyecto); // Cierra el archivo
  
  cout << "\n\r<<< Oprima cualquier tecla para continuar >>>";

  getchar();
  return;
}
